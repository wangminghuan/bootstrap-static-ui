/*! AdminLTE app.js
 * ================
 * Main JS application file for AdminLTE v2. This file
 * should be included in all pages. It controls some layout
 * options and implements exclusive AdminLTE plugins.
 *
 * @Author  Almsaeed Studio
 * @Support <http://www.almsaeedstudio.com>
 * @Email   <abdullah@almsaeedstudio.com>
 * @version 2.3.7
 * @license MIT <http://opensource.org/licenses/MIT>
 */
$._fixClick=function(e,attr){
  var $this = $(this);
  if(e.hasOwnProperty('originalEvent')){
      $this.attr(attr,1)
  }else{
    if($this.attr(attr)==1){
      $this.attr(attr,"")
      return true;
    }
}
return false;
};
function _init() {
  "use strict";
  $.AdminLTE.layout = {
    activate: function () {
      var a = this;
      a.fix(), a.fixSidebar(), $(window, ".wrapper").resize(function () {
        a.fix(), a.fixSidebar()
      })
    },
    fix: function () {
      var a = $(".main-header").outerHeight() + ($(".main-footer").outerHeight() || 0),
        b = $(window).height(),
        c = $(".sidebar").height();
      if ($("body").hasClass("fixed")) $(".content-wrapper, .right-side").css("min-height", b - ($(".main-footer").outerHeight() || 0));
      else {
        var d;
        b >= c ? ($(".content-wrapper, .right-side").css("min-height", b - a), d = b - a) : ($(".content-wrapper, .right-side").css("min-height", c), d = c);
        var e = $($.AdminLTE.options.controlSidebarOptions.selector);
        "undefined" != typeof e && e.height() > d && $(".content-wrapper, .right-side").css("min-height", e.height())
      }
    },
    fixSidebar: function () {
      return $("body").hasClass("fixed") ? ("undefined" == typeof $.fn.slimScroll && window.console && window.console.error("Error: the fixed layout requires the slimscroll plugin!"), void($.AdminLTE.options.sidebarSlimScroll && "undefined" != typeof $.fn.slimScroll && ($(".sidebar").slimScroll({
        destroy: !0
      }).height("auto"), $(".sidebar").slimscroll({
        height: $(window).height() - $(".main-header").height() + "px",
        color: "rgba(0,0,0,0.2)",
        size: "3px"
      })))) : void("undefined" != typeof $.fn.slimScroll && $(".sidebar").slimScroll({
        destroy: !0
      }).height("auto"))
    }
  }, $.AdminLTE.pushMenu = {
    activate: function (a) {
      var b = $.AdminLTE.options.screenSizes;
      $(document).on("click", a, function (a) {
        a.preventDefault(), $(window).width() > b.sm - 1 ? $("body").hasClass("sidebar-collapse") ? $("body").removeClass("sidebar-collapse").trigger("expanded.pushMenu") : $("body").addClass("sidebar-collapse").trigger("collapsed.pushMenu") : $("body").hasClass("sidebar-open") ? $("body").removeClass("sidebar-open").removeClass("sidebar-collapse").trigger("collapsed.pushMenu") : $("body").addClass("sidebar-open").trigger("expanded.pushMenu")
      }), $(".content-wrapper").click(function () {
        $(window).width() <= b.sm - 1 && $("body").hasClass("sidebar-open") && $("body").removeClass("sidebar-open")
      }), ($.AdminLTE.options.sidebarExpandOnHover || $("body").hasClass("fixed") && $("body").hasClass("sidebar-mini")) && this.expandOnHover()
    },
    expandOnHover: function () {
      var a = this,
        b = $.AdminLTE.options.screenSizes.sm - 1;
      $(".main-sidebar").hover(function () {
        $("body").hasClass("sidebar-mini") && $("body").hasClass("sidebar-collapse") && $(window).width() > b && a.expand()
      }, function () {
        $("body").hasClass("sidebar-mini") && $("body").hasClass("sidebar-expanded-on-hover") && $(window).width() > b && a.collapse()
      })
    },
    expand: function () {
      $("body").removeClass("sidebar-collapse").addClass("sidebar-expanded-on-hover")
    },
    collapse: function () {
      $("body").hasClass("sidebar-expanded-on-hover") && $("body").removeClass("sidebar-expanded-on-hover").addClass("sidebar-collapse")
    }
  }, 
  $.AdminLTE.tree = function (menu) {
    var _this = this;
    var animationSpeed = $.AdminLTE.options.animationSpeed;
    $(document).off('click', menu + ' li a')
        .on('click', menu + ' li a', function (e) {
            if($._fixClick(e,"data-click-1")) return;
            //Get the clicked link and the next element
            var $this = $(this);
            var checkElement = $this.next();
            //解决多次模拟触发的问题
           
            //Check if the next element is a menu and is visible 有子菜单的情况
            if ((checkElement.is('.treeview-menu')) && (checkElement.is(':visible')) && (!$('body').hasClass('sidebar-collapse'))) {
                //Close the menu
                console.log("有子菜单，隐藏")
                checkElement.slideUp(animationSpeed, function () {
                    checkElement.removeClass('menu-open');
                    //Fix the layout in case the sidebar stretches over the height of the window
                    //_this.layout.fix();
                });
                checkElement.parent("li").removeClass("active");
            }
            //If the menu is not visible
            else if ((checkElement.is('.treeview-menu')) && (!checkElement.is(':visible'))) {
                //Get the parent menu
                console.log("有子菜单，显示")
                var parent = $this.parents('ul').first();
                // modified by FastAdmin
                if ($(".show-submenu", menu).length == 0) {
                    //Close all open menus within the parent
                    var ul = parent.find('ul:visible').slideUp(animationSpeed);
                    //Remove the menu-open class from the parent
                    ul.removeClass('menu-open');
                }
                //Get the parent li
                var parent_li = $this.parent("li");

                //Open the target menu and add the menu-open class
                checkElement.slideDown(animationSpeed, function () {
                    //Add the class active to the parent li
                    checkElement.addClass('menu-open');
                    parent.find('li.active').removeClass('active');
                    parent_li.addClass('active');
                    //Fix the layout in case the sidebar stretches over the height of the window
                    _this.layout.fix();
                });
            } else {
                 console.log("没有子菜单")
                 var $oneMenu=$this.parent().parent(".sidebar-menu");
                 var $multiMenu=$this.parent().parent(".treeview-menu");
                 
                 if($oneMenu.length>0){
                   console.log("run 1")
                     $oneMenu.children("li").removeClass("active")
                  }else if($multiMenu.length>0){
                    $multiMenu.children("li").removeClass("active")
                  }
                 
                if (!$this.parent().hasClass("active")) {
                    $this.parent().addClass("active");
                }
                
                // modified by FastAdmin
                if ($(".show-submenu", menu).length == 0) {
                  var $openMenu=$this.parent().siblings().find("ul.menu-open");
                  $openMenu.slideUp(function(){
                    $openMenu.children("li").removeClass("active")
                    });
                }
            }
            //if this isn't a link, prevent the page from being redirected
            if (checkElement.is('.treeview-menu')) {
                e.preventDefault();
            }
        });
},
  // $.AdminLTE.tree = function (a) {
  //   var b = this,
  //     c = $.AdminLTE.options.animationSpeed;
  //   $(document).off("click", a + " li a").on("click", a + " li a", function (a) {
  //     // debugger;
  //     var d = $(this),
  //       e = d.next();
  //     if (e.is(".treeview-menu") && e.is(":visible") && !$("body").hasClass("sidebar-collapse")) e.slideUp(c, function () {
  //       e.removeClass("menu-open")
  //     }), e.parent("li").removeClass("active");
  //     else if (e.is(".treeview-menu") && !e.is(":visible")) {
  //       var f = d.parents("ul").first(),
  //         g = f.find("ul:visible").slideUp(c);
  //       g.removeClass("menu-open");
  //       var h = d.parent("li");
  //       e.slideDown(c, function () {
  //         e.addClass("menu-open"), f.find("li.active").removeClass("active"), h.addClass("active"), b.layout.fix()
  //       })
  //     } else if(d && d[0].tagName==='A'){
        
  //       //  d.parent("li").addClass("active")
  //     }
  //     e.is(".treeview-menu") && a.preventDefault()
  //   })
  // }, 
  
  
  $.AdminLTE.controlSidebar = {
    activate: function () {
      var a = this,
        b = $.AdminLTE.options.controlSidebarOptions,
        c = $(b.selector),
        d = $(b.toggleBtnSelector);
      d.on("click", function (d) {
        d.preventDefault(), c.hasClass("control-sidebar-open") || $("body").hasClass("control-sidebar-open") ? a.close(c, b.slide) : a.open(c, b.slide)
      });
      var e = $(".control-sidebar-bg");
      a._fix(e), $("body").hasClass("fixed") ? a._fixForFixed(c) : $(".content-wrapper, .right-side").height() < c.height() && a._fixForContent(c)
    },
    open: function (a, b) {
      b ? a.addClass("control-sidebar-open") : $("body").addClass("control-sidebar-open")
    },
    close: function (a, b) {
      b ? a.removeClass("control-sidebar-open") : $("body").removeClass("control-sidebar-open")
    },
    _fix: function (a) {
      var b = this;
      if ($("body").hasClass("layout-boxed")) {
        if (a.css("position", "absolute"), a.height($(".wrapper").height()), b.hasBindedResize) return;
        $(window).resize(function () {
          b._fix(a)
        }), b.hasBindedResize = !0
      } else a.css({
        position: "fixed",
        height: "auto"
      })
    },
    _fixForFixed: function (a) {
      a.css({
        position: "fixed",
        "max-height": "100%",
        overflow: "auto",
        "padding-bottom": "50px"
      })
    },
    _fixForContent: function (a) {
      $(".content-wrapper, .right-side").css("min-height", a.height())
    }
  }, $.AdminLTE.boxWidget = {
    selectors: $.AdminLTE.options.boxWidgetOptions.boxWidgetSelectors,
    icons: $.AdminLTE.options.boxWidgetOptions.boxWidgetIcons,
    animationSpeed: $.AdminLTE.options.animationSpeed,
    activate: function (a) {
      var b = this;
      a || (a = document), $(a).on("click", b.selectors.collapse, function (a) {
        a.preventDefault(), b.collapse($(this))
      }), $(a).on("click", b.selectors.remove, function (a) {
        a.preventDefault(), b.remove($(this))
      })
    },
    collapse: function (a) {
      var b = this,
        c = a.parents(".box").first(),
        d = c.find("> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer");
      c.hasClass("collapsed-box") ? (a.children(":first").removeClass(b.icons.open).addClass(b.icons.collapse), d.slideDown(b.animationSpeed, function () {
        c.removeClass("collapsed-box")
      })) : (a.children(":first").removeClass(b.icons.collapse).addClass(b.icons.open), d.slideUp(b.animationSpeed, function () {
        c.addClass("collapsed-box")
      }))
    },
    remove: function (a) {
      var b = a.parents(".box").first();
      b.slideUp(this.animationSpeed)
    }
  }
}
if ("undefined" == typeof jQuery) throw new Error("AdminLTE requires jQuery");
$.AdminLTE = {}, $.AdminLTE.options = {
    navbarMenuSlimscroll: !0,
    navbarMenuSlimscrollWidth: "3px",
    navbarMenuHeight: "200px",
    animationSpeed: 500,
    sidebarToggleSelector: "[data-toggle='offcanvas']",
    sidebarPushMenu: !0,
    sidebarSlimScroll: !0,
    sidebarExpandOnHover: !1,
    enableBoxRefresh: !0,
    enableBSToppltip: !0,
    BSTooltipSelector: "[data-toggle='tooltip']",
    enableFastclick: !1,
    enableControlSidebar: !0,
    controlSidebarOptions: {
      toggleBtnSelector: "[data-toggle='control-sidebar']",
      selector: ".control-sidebar",
      slide: !0
    },
    enableBoxWidget: !0,
    boxWidgetOptions: {
      boxWidgetIcons: {
        collapse: "fa-minus",
        open: "fa-plus",
        remove: "fa-times"
      },
      boxWidgetSelectors: {
        remove: '[data-widget="remove"]',
        collapse: '[data-widget="collapse"]'
      }
    },
    directChat: {
      enable: !0,
      contactToggleSelector: '[data-widget="chat-pane-toggle"]'
    },
    colors: {
      lightBlue: "#3c8dbc",
      red: "#f56954",
      green: "#00a65a",
      aqua: "#00c0ef",
      yellow: "#f39c12",
      blue: "#0073b7",
      navy: "#001F3F",
      teal: "#39CCCC",
      olive: "#3D9970",
      lime: "#01FF70",
      orange: "#FF851B",
      fuchsia: "#F012BE",
      purple: "#8E24AA",
      maroon: "#D81B60",
      black: "#222222",
      gray: "#d2d6de"
    },
    screenSizes: {
      xs: 480,
      sm: 768,
      md: 992,
      lg: 1200
    }
  }, $(function () {
    "use strict";
    $("body").removeClass("hold-transition"), "undefined" != typeof AdminLTEOptions && $.extend(!0, $.AdminLTE.options, AdminLTEOptions);
    var a = $.AdminLTE.options;
    _init(), $.AdminLTE.layout.activate(), $.AdminLTE.tree(".sidebar"), a.enableControlSidebar && $.AdminLTE.controlSidebar.activate(), a.navbarMenuSlimscroll && "undefined" != typeof $.fn.slimscroll && $(".navbar .menu").slimscroll({
      height: a.navbarMenuHeight,
      alwaysVisible: !1,
      size: a.navbarMenuSlimscrollWidth
    }).css("width", "100%"), a.sidebarPushMenu && $.AdminLTE.pushMenu.activate(a.sidebarToggleSelector), a.enableBSToppltip && $("body").tooltip({
      selector: a.BSTooltipSelector
    }), a.enableBoxWidget && $.AdminLTE.boxWidget.activate(), a.enableFastclick && "undefined" != typeof FastClick && FastClick.attach(document.body), a.directChat.enable && $(document).on("click", a.directChat.contactToggleSelector, function () {
      var a = $(this).parents(".direct-chat").first();
      a.toggleClass("direct-chat-contacts-open")
    }), $('.btn-group[data-toggle="btn-toggle"]').each(function () {
      var a = $(this);
      $(this).find(".btn").on("click", function (b) {
        a.find(".btn.active").removeClass("active"), $(this).addClass("active"), b.preventDefault()
      })
    })
  }),
  function (a) {
    "use strict";
    a.fn.boxRefresh = function (b) {
      function c(a) {
        a.append(f), e.onLoadStart.call(a)
      }

      function d(a) {
        a.find(f).remove(), e.onLoadDone.call(a)
      }
      var e = a.extend({
          trigger: ".refresh-btn",
          source: "",
          onLoadStart: function (a) {
            return a
          },
          onLoadDone: function (a) {
            return a
          }
        }, b),
        f = a('<div class="overlay"><div class="fa fa-refresh fa-spin"></div></div>');
      return this.each(function () {
        if ("" === e.source) return void(window.console && window.console.log("Please specify a source first - boxRefresh()"));
        var b = a(this),
          f = b.find(e.trigger).first();
        f.on("click", function (a) {
          a.preventDefault(), c(b), b.find(".box-body").load(e.source, function () {
            d(b)
          })
        })
      })
    }
  }(jQuery),
  function (a) {
    "use strict";
    a.fn.activateBox = function () {
      a.AdminLTE.boxWidget.activate(this)
    }, a.fn.toggleBox = function () {
      var b = a(a.AdminLTE.boxWidget.selectors.collapse, this);
      a.AdminLTE.boxWidget.collapse(b)
    }, a.fn.removeBox = function () {
      var b = a(a.AdminLTE.boxWidget.selectors.remove, this);
      a.AdminLTE.boxWidget.remove(b)
    }
  }(jQuery),
  function (a) {
    "use strict";
    a.fn.todolist = function (b) {
      var c = a.extend({
        onCheck: function (a) {
          return a
        },
        onUncheck: function (a) {
          return a
        }
      }, b);
      return this.each(function () {
        "undefined" != typeof a.fn.iCheck ? (a("input", this).on("ifChecked", function () {
          var b = a(this).parents("li").first();
          b.toggleClass("done"), c.onCheck.call(b)
        }), a("input", this).on("ifUnchecked", function () {
          var b = a(this).parents("li").first();
          b.toggleClass("done"), c.onUncheck.call(b)
        })) : a("input", this).on("change", function () {
          var b = a(this).parents("li").first();
          b.toggleClass("done"), a("input", b).is(":checked") ? c.onCheck.call(b) : c.onUncheck.call(b)
        })
      })
    }
  }(jQuery);

//路由功能，实现hash模式的路由
(function () {
  var $treeviewMenu = $('.sidebar-menu');
  var _router = {
    init: function ($wrap, $viewMenu) {
      var that = this;
      this._query = this.routerQuery(window.location.hash.substring(1));
      
      //监听hash变化
      window.onhashchange = function (e) {
        var _newPath = that.routerQuery((e.newURL).substring(e.newURL.indexOf("#") + 1));
        var _id=_newPath.query && _newPath.query.reftab?_newPath.query.reftab:"0";
        //切换iframe标签
        that.taggleFrame($wrap, _newPath.full, _id);
        //激活对应左侧菜单
        that.mockClick($viewMenu,"treeview-menu",_id)
      }
      //重定向或初始化
      this.redirect($viewMenu, this._query, $wrap);
    },
    //模拟点击
    mockClick:function($viewMenu,treeClass,id){
      var $targetLi=$viewMenu.find("a[data-nav-id='" + id + "']");
      var checkElement=$targetLi.parents("."+treeClass)
      if((checkElement.is('.'+treeClass)) && (!checkElement.is(':visible'))){
        checkElement.prev().click();
        setTimeout(function(){
          $targetLi.click();
        },600)
      }else{
          $targetLi.click();
        // $targetLi.click();
      }
    },
    redirect: function ($viewMenu, _query, $wrap) {
        window.$allRouterPath = {};
        var $router = $viewMenu.find("a");
        var firstId;
       //收集所有的id
      for (var k = 0; k < $router.length; k++) {
        var _href = $router.eq(k).attr("href");
        var _id = $router.eq(k).attr("data-nav-id");
        if (_id && _href !== "#" && !((/^javascript:/g).test(_href)) && !$allRouterPath[_id]) {
          if(!firstId) firstId=_id;
          $allRouterPath[_id]={
            id:_id,
            url:_href,
            txt:$router.eq(k).children("span").eq(0).text(),
            icon:$router.eq(k).children(".fa").attr("class"),
          }
        }
      }
      var initId=_query.query.reftab;
      // debugger;
      if (initId && $allRouterPath[initId]) {
        //初始化菜单，定位菜单位置
        this.initMenu($viewMenu, initId);
        this.creatFrame($wrap, _query.full, _query.query.reftab||"0");
        
      } else {
        //重定向
        var jumpUrl=$allRouterPath[firstId].url+($allRouterPath[firstId].url.indexOf("?")>-1?"&":"?")+"reftab="+firstId;
        window.location.hash = "#" + jumpUrl;
        this.initMenu($viewMenu,firstId)
      }
    },
    initMenu: function ($viewMenu,$id) {
      var that=this;
      //阻止A标签的跳转，手动强制为hash模式
      $(document).on('click', '.sidebar-menu li a', function (e) {
        if($._fixClick(e,"data-click-2")) return;
        e.preventDefault();
        var _href = $(this).attr("href");
        var _id=$(this).attr("data-nav-id");
        if (_id && _href !== "#" && !((/^javascript:/g).test(_href))) {
          window.location.hash = _href.indexOf("?")>-1?(_href+"&reftab="+_id):(_href+"?reftab="+_id);
        }
      })
      setTimeout(function(){
          that.mockClick($viewMenu,"treeview-menu",$id)
      },10) 
    },
    routerQuery: function (urlPath) {
      var _allPath = (urlPath);
      var _allPathArr = _allPath.split("?");
      return {
        path: _allPathArr[0] ? _allPathArr[0] : "/",
        query: this.getSearchKey((_allPathArr[1] || "")),
        full: _allPath
      };
    },
    getSearchKey: function (argStr) {
      var argObj = {},
        item = null,
        value = null,
        key = null,
        argArr = argStr.length > 0 ? argStr.split("&") : [];
      for (var i = 0, len = argArr.length; i < len; i++) {
        item = argArr[i].split("=");
        key = item[0];
        value = item[1];
        argObj[key] = value;
      }
      return argObj
    },
    taggleFrame($wrap, path,_id) {
      //过滤search参数
      var _path = this.routerQuery(path);
      var _target = $wrap.find("div[data-ifr-id='" + _id + "']");
      $wrap.children(".tab-pane").removeClass("active");
      if (_target.length > 0) {
        _target.toggleClass("active")
      } else {
        //初始化创建
        this.creatFrame($wrap, _path.full, _id)

      }
    },
    creatFrame: function ($wrap, path,id) {
      var _str = '<div class="tab-pane active" data-ifr-id="' + id + '">';
      _str += '<iframe  src="' + path + '" width="100%" height="100%" frameborder="no" border="0" marginwidth="0" marginheight="0" scrolling-x="no" scrolling-y="auto" allowtransparency="yes"></iframe>'
      _str += '</div>';
      $wrap.append(_str)
    }
  }
  //初始化操作
  _router.init($("#app-main-content"), $treeviewMenu);
})();

(function(){
  //全屏事件
  $(document).on('click', "[data-toggle='fullscreen']", function () {
    var doc = document.documentElement;
    if ($(document.body).hasClass("full-screen")) {
        $(document.body).removeClass("full-screen");
        document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen();
    } else {
        $(document.body).addClass("full-screen");
        doc.requestFullscreen ? doc.requestFullscreen() : doc.mozRequestFullScreen ? doc.mozRequestFullScreen() : doc.webkitRequestFullscreen ? doc.webkitRequestFullscreen() : doc.msRequestFullscreen && doc.msRequestFullscreen();
    }
});
// var nav=$(".nav-addtabs")
// nav.addtabs({});
// 顶部add-tabs功能
    // $(document).on('click', '.sidebar-menu li a', function (e) {
    //     e.preventDefault();
    //     if($._fixClick(e,"data-click-3")) return;
    //     var _href = $(this).attr("href");
    //     var _id=$(this).attr("data-nav-id");
    //     var _storageKey="__addtabs__";
    //     var _storageObj=JSON.parse(sessionStorage.getItem(_storageKey) ||"{}");
    //     if (_id && _href !== "#" && !((/^javascript:/g).test(_href)) &&  !_storageObj[_id]) {
    //       _storageObj[_id]=window.$allRouterPath[_id];
    //       sessionStorage.setItem(_storageKey,JSON.stringify(_storageObj));
    //       $(".nav-addtabs").append('<li role="presentation" node-id="'+_id+'"><a href="'+_storageObj[_id].url+'" role="tab" data-toggle="tab"><i class="'+_storageObj[_id].icon+'"></i><span>'+_storageObj[_id].txt+'</span></a><i class="close-tab fa fa-times"></i></li>')
    //     }
    // })
    //点击顶部第一级菜单栏
    // $(".nav-addtabs").on("click", function (e) {
    //   var $target=null;
    //   if($(e.target).attr("role")==="presentation"){
    //     $target=$(e.target)
    //   }else if($(e.target).hasClass("close-tab")){
    //     $(e.target).parents("[role]").remove();
    //   }
        //  node-id="67"
        // $(".sidebar-menu").find("a[data-nav-id='" + id + "']")
        // $("li", firstnav).removeClass("active");
        // $(this).closest("li").addClass("active");
        // $(".sidebar-menu > li.treeview").addClass("hidden");
        // if ($(this).attr("url") == "javascript:;") {
        //     var sonlist = $(".sidebar-menu > li[pid='" + $(this).attr("addtabs") + "']");
        //     sonlist.removeClass("hidden");
        //     var sidenav;
        //     var last_id = $(this).attr("last-id");
        //     if (last_id) {
        //         sidenav = $(".sidebar-menu > li[pid='" + $(this).attr("addtabs") + "'] a[addtabs='" + last_id + "']");
        //     } else {
        //         sidenav = $(".sidebar-menu > li[pid='" + $(this).attr("addtabs") + "']:first > a");
        //     }
        //     if (sidenav) {
        //         sidenav.attr("href") != "javascript:;" && sidenav.trigger('click');
        //     }
        // } else {

        // }
    // });
// var multiplenav = false;
// var firstnav = $("#firstnav .nav-addtabs");
// var nav = multiplenav ? $("#secondnav .nav-addtabs") : firstnav;

// //刷新菜单事件
// $(document).on('refresh', '.sidebar-menu', function () {
//     Fast.api.ajax({
//         url: 'index/index',
//         data: {action: 'refreshmenu'}
//     }, function (data) {
//         $(".sidebar-menu li:not([data-rel='external'])").remove();
//         $(".sidebar-menu").prepend(data.menulist);
//         if (multiplenav) {
//             firstnav.html(data.navlist);
//         }
//         $("li[role='presentation'].active a", nav).trigger('click');
//         return false;
//     }, function () {
//         return false;
//     });
// });

// if (multiplenav) {
//     //一级菜单自适应
//     $(window).resize(function () {
//         var siblingsWidth = 0;
//         firstnav.siblings().each(function () {
//             siblingsWidth += $(this).outerWidth();
//         });
//         firstnav.width(firstnav.parent().width() - siblingsWidth);
//         firstnav.refreshAddtabs();
//     });

//     //点击顶部第一级菜单栏
//     firstnav.on("click", "li a", function () {
//         $("li", firstnav).removeClass("active");
//         $(this).closest("li").addClass("active");
//         $(".sidebar-menu > li.treeview").addClass("hidden");
//         if ($(this).attr("url") == "javascript:;") {
//             var sonlist = $(".sidebar-menu > li[pid='" + $(this).attr("addtabs") + "']");
//             sonlist.removeClass("hidden");
//             var sidenav;
//             var last_id = $(this).attr("last-id");
//             if (last_id) {
//                 sidenav = $(".sidebar-menu > li[pid='" + $(this).attr("addtabs") + "'] a[addtabs='" + last_id + "']");
//             } else {
//                 sidenav = $(".sidebar-menu > li[pid='" + $(this).attr("addtabs") + "']:first > a");
//             }
//             if (sidenav) {
//                 sidenav.attr("href") != "javascript:;" && sidenav.trigger('click');
//             }
//         } else {

//         }
//     });

//     //点击左侧菜单栏
//     $(document).on('click', '.sidebar-menu li a', function (e) {
//       console.log(2,e)
//         // var parents = $(this).parentsUntil("ul.sidebar-menu", "li");
//         // var top = parents[parents.length - 1];
//         // var pid = $(top).attr("pid");
//         // if (pid) {
//         //     var obj = $("li a[addtabs=" + pid + "]", firstnav);
//         //     var last_id = obj.attr("last-id");
//         //     if (!last_id || last_id != pid) {
//         //         obj.attr("last-id", $(this).attr("addtabs"));
//         //         if (!obj.closest("li").hasClass("active")) {
//         //             obj.trigger("click");
//         //         }
//         //     }
//         // }
//     });

//     var mobilenav = $(".mobilenav");
//     $("#firstnav .nav-addtabs li a").each(function () {
//         mobilenav.append($(this).clone().addClass("btn btn-app"));
//     });

//     //点击移动端一级菜单
//     mobilenav.on("click", "a", function () {
//         $("a", mobilenav).removeClass("active");
//         $(this).addClass("active");
//         $(".sidebar-menu > li.treeview").addClass("hidden");
//         if ($(this).attr("url") == "javascript:;") {
//             var sonlist = $(".sidebar-menu > li[pid='" + $(this).attr("addtabs") + "']");
//             sonlist.removeClass("hidden");
//         }
//     });
// }

// //这一行需要放在点击左侧链接事件之前
// // var addtabs = Config.referer ? localStorage.getItem("addtabs") : null;

// //绑定tabs事件,如果需要点击强制刷新iframe,则请将iframeForceRefresh置为true,iframeForceRefreshTable只强制刷新表格
// nav.addtabs({iframeHeight: "100%", iframeForceRefresh: false, iframeForceRefreshTable: true, nav: nav});

// if ($("ul.sidebar-menu li.active a").size() > 0) {
//     $("ul.sidebar-menu li.active a").trigger("click");
// } else {
//     if (Config.fastadmin.multiplenav) {
//         $("li:first > a", firstnav).trigger("click");
//     } else {
//         $("ul.sidebar-menu li a[url!='javascript:;']:first").trigger("click");
//     }
// }

// //如果是刷新操作则直接返回刷新前的页面
// if (Config.referer) {
//     if (Config.referer === $(addtabs).attr("url")) {
//         var active = $("ul.sidebar-menu li a[addtabs=" + $(addtabs).attr("addtabs") + "]");
//         if (multiplenav && active.size() == 0) {
//             active = $("ul li a[addtabs='" + $(addtabs).attr("addtabs") + "']");
//         }
//         if (active.size() > 0) {
//             active.trigger("click");
//         } else {
//             $(addtabs).appendTo(document.body).addClass("hide").trigger("click");
//         }
//     } else {
//         //刷新页面后跳到到刷新前的页面
//         Backend.api.addtabs(Config.referer);
//     }
// }
})();
var multiplenav = false;
var firstnav = $("#firstnav .nav-addtabs");
var nav = multiplenav ? $("#secondnav .nav-addtabs") : firstnav;
nav.addtabs({iframeHeight: "100%", iframeForceRefresh: false, iframeForceRefreshTable: true, nav: nav});
// firstnav.on("click", "li a", function () {
//   $("li", firstnav).removeClass("active");
//   $(this).closest("li").addClass("active");
//   $(".sidebar-menu > li.treeview").addClass("hidden");
//   if ($(this).attr("url") == "javascript:;") {
//       var sonlist = $(".sidebar-menu > li[pid='" + $(this).attr("addtabs") + "']");
//       sonlist.removeClass("hidden");
//       var sidenav;
//       var last_id = $(this).attr("last-id");
//       if (last_id) {
//           sidenav = $(".sidebar-menu > li[pid='" + $(this).attr("addtabs") + "'] a[addtabs='" + last_id + "']");
//       } else {
//           sidenav = $(".sidebar-menu > li[pid='" + $(this).attr("addtabs") + "']:first > a");
//       }
//       if (sidenav) {
//           sidenav.attr("href") != "javascript:;" && sidenav.trigger('click');
//       }
//   } else {

//   }
// });